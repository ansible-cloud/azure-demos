---
- name: Create the Public IP Address
  hosts: localhost
  connection: local
  tasks:

# Public IP Windows VM
  
    - name: Create public IP address for Windows
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group_name }}"
        allocation_method: Static
        name: "{{ win_public_ip_name }}"
      register: output_ip_address_win

    - name: Dump public IP for VM which will be created
      debug:
        msg: "The public IP is {{ output_ip_address_win.state.ip_address }}"

    - name: Set Stat for Ansible Controller
      set_stats:
        data: 
          azure_vm_public_ip: "{{ output_ip_address_win.state.ip_address }}"
        per_host: false

# Public IP Linux VM_1

    - name: Create public IP address for Linux
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group_name }}"
        allocation_method: Static
        name: "{{ linux_public_ip_name }}"
      register: output_ip_address_linux

    - name: Dump public IP for VM which will be created
      debug:
        msg: "The public IP is {{ output_ip_address_linux.state.ip_address }}"

    - name: Set Stat for Ansible Controller
      set_stats:
        data: 
          azure_vm_public_ip: "{{ output_ip_address_linux.state.ip_address }}"
        per_host: false

# Public IP Linux VM_2

    - name: Create public IP address for Linux
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group_name }}"
        allocation_method: Static
        name: "{{ linux_public_ip_name1 }}"
      register: output_ip_address_linux1

    - name: Dump public IP for VM which will be created
      debug:
        msg: "The public IP is {{ output_ip_address_linux1.state.ip_address }}"

    - name: Set Stat for Ansible Controller
      set_stats:
        data: 
          azure_vm_public_ip: "{{ output_ip_address_linux1.state.ip_address }}"
        per_host: false
